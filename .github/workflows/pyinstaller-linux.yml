name: Build and Release

on:
  push:
    branches: [main]

permissions:
  contents: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      script: script  # Ton nom de script
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Get latest tag
        id: get_tag
        shell: bash
        run: |
          git fetch --tags
          latest_tag=$(git describe --tags --abbrev=0 || echo "v0.0.0")
          version=${latest_tag#v}
          IFS='.' read -r major minor patch <<< "$version"
          new_patch=$((patch + 1))
          new_tag="v$major.$minor.$new_patch"
          echo "tag=$new_tag" >> $GITHUB_OUTPUT

      - name: Check Tag Exists
        uses: mukunku/tag-exists-action@v1.0.0
        id: checkTag
        with: 
          tag: ${{ steps.get_tag.outputs.tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Fail If Tag Exists
        if: ${{ steps.checkTag.outputs.exists == 'true' }}
        run: exit 1

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Executable for ARM (Raspberry Pi)
        run: |
          docker run --rm --privileged \
            -v "$PWD":/src \
            -w /src \
            balenalib/raspberrypi3-python:3.10-buster \
            /bin/bash -c "
              apt-get update && apt-get install -y gcc python3-pip python3-dev build-essential
              pip3 install pyinstaller -r requirements.txt
              pyinstaller --onefile --noconsole main.py
            "

      - name: Publish a New Release
        id: release
        uses: ncipollo/release-action@v1
        with:
          artifacts: dist/main
          tag: ${{ steps.get_tag.outputs.tag }}
          token: ${{ secrets.GITHUB_TOKEN }}
